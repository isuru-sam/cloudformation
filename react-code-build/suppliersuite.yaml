AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SupplierSuiteVPC:
    Description: VPC to operate in
    Type: AWS::EC2::VPC::Id
  SupplierSuiteSubnetIDs:
    Description: Subnet IDs that is a List of Subnet Id
    Type: "List<AWS::EC2::Subnet::Id>"

Mappings: 
  Buckets: 
    Dev: 
      ReactApp: dev.reactapp.com
    Key02: 
      Name: Value02
    Key03: 
      Name: Value03


Resources:
  ReactAppDevBucket:
    Type: 'AWS::S3::Bucket'
    Properties: 
        #AccessControl: PublicRead
        BucketName: !FindInMap
             - Buckets
             - Dev
             - ReactApp
        WebsiteConfiguration:
          IndexDocument: index.html
   
        
  reactappbucketpolicy:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: ReactAppDevBucket
    Properties:
        Bucket: 
           Ref: ReactAppDevBucket
        PolicyDocument:
          Statement:
              Effect: Allow
              Principal:
                '*'
              Action:
                - 's3:GetObject'
                - 's3:GetBucketLocation'
                - 's3:ListBucket'
              Resource: 
                - !Sub '${ReactAppDevBucket.Arn}'
                - !Sub '${ReactAppDevBucket.Arn}/*'

  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          - 
            # Use the DeployBucket as the CDN origin
            DomainName: !GetAtt ReactAppDevBucket.DomainName
            Id: !Ref ReactAppDevBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        # Configure the caching behavior for our CDN
        DefaultCacheBehavior: 
          MinTTL: 86400  # 1 day
          MaxTTL: 31536000  # 1 year
          ForwardedValues: 
            QueryString: true
          TargetOriginId: !Ref ReactAppDevBucket
          ViewerProtocolPolicy: "redirect-to-https"      

          
  PipelineBucket: 
      Type: 'AWS::S3::Bucket'
      Properties: {}         
          
  ReactAppCodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: ReactApp-CodeBuild
      ServiceRole: !GetAtt ReactAppCodeBuildRole.Arn
      Artifacts:
        # The downloaded source code for the build will come from CodePipeline
        Type: CODEPIPELINE
        Name: MyProject
      Source: 
        Type: CODEPIPELINE
      Environment:
        # Linux container with node installed
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/standard:2.0"
        EnvironmentVariables:
            - Name: ENVIRONMENT
              Value: dev
            - Name: S3_BUCKET
              Value: s3://dev.reactapp.com   
      Source:
        Type: CODEPIPELINE
        BuildSpec: react-code-build/buildspec.yml
  # IAM role that allows CodeBuild to interact with S3, CloudWatch, and CloudFront
  ReactAppCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource: 
                  - !GetAtt ReactAppDevBucket.Arn
                  - !Join ['', [!GetAtt ReactAppDevBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - 
          Name: Source
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts: 
                - 
                  Name: ReactApp
              Configuration:
                Owner: isuru-sam
                Repo: cloudformation
                Branch: master
                OAuthToken: 413a8094236a05242ef41381093be92ea5bb2691
        - 
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              ActionTypeId: 
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts: 
                - 
                  Name: ReactApp
              OutputArtifacts: 
                - 
                  Name: ReactAppBuild
              Configuration:
                ProjectName: !Ref ReactAppCodeBuild
  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource: 
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - 
                Effect: Allow  
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"                